---
- name: Creating Ubuntu instance
  hosts: localhost
  connection: local
  vars_files:
    - variable.vars
  tasks:
    - name: Ec2 creation
      ec2:
        region: "us-east-1"
        instance_type: t2.medium
        key_name: project
        image: "ami-0885b1f6bd170450c"
        vpc_subnet_id: "subnet-3211fd13"
        assign_public_ip: yes
        instance_tags:
          Name: Ansible-Ubuntu
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
      register: ec2_data
    
    - name: EC2 Details
      ec2_instance_facts:
        region: "us-east-1"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        instance_ids: "{{ ec2_data.instances[0].id }}"
      register: ec2_metadata

    - name: Create inventory group
      add_host:   
        groupname: Ubuntuec2
        hostname: "{{ec2_metadata.instances[0].public_ip_address}}"
        ansible_user: ubuntu
        ansible_ssh_private_key_file: project.pem
    
    - name: Wait for SSH to come up
      wait_for: 
        host: "{{ec2_metadata.instances[0].public_ip_address}}"
        port: 22 
        state: started
    
- hosts: Ubuntuec2
  become: true
  tasks:
    - name: Update apt
      apt: 
        update_cache: yes

    - name: Installing packages
      apt:
        name: "{{ item }}"
        state: latest 
      with_items: 
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools
        - unzip
        - npm

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        update_cache: yes 
        name: docker-ce
        state: latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Add ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

    - name: Creating a nodejs directory
      file:
        path: /home/ubuntu/elasticsearch
        state: directory

    - name: Copying docker file
      copy:
        src: "{{ item }}"
        dest: /home/ubuntu/elasticsearch/
      with_items:
        - Dockerfile
        - elasticsearch.yml
        - jvm.options
        - logging.yml

    - name: Buiding a elasticsearch image
      docker_image:
        path: /home/ubuntu/elasticsearch/
        name: roshanjoseph23/esimage:v1

    - name: Create Docker volume
      docker_volume:
        name: esdata

    - name: Create Nodejs-webapp container
      docker_container:
        name: elasticsearch
        image: roshanjoseph23/esimage:v1
        state: started
        ports:
          - "9200:9200"
        restart: yes
        restart_policy: unless-stopped
        volumes:
          - esdata:/usr/share/elasticsearch/data